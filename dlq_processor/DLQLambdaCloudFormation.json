{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters" : {
      "SumoEndPointURL" : {
        "Type" : "String",
        "Default" : "https://nite-events.sumologic.net/receiver/v1/http/ZaVnC4dhaV3_T1vGzqOZIeERyqOzOE1e6RjXE59PErnOkZ-PSjb6gGesLBli8dzUvQWzDhRHRhYByGLHWYOlkss6S-vBXYOf7RDk41o2fiVC08g6ogm1dA==",
        "Description" : "Enter SUMO_ENDPOINT"
      },
      "EmailID": {
        "Type": "String",
        "Default": "test@gmail.com",
        "Description": "Enter your email for receiving alerts.You will receive confirmation email after the deployment is complete, confirm it to subscribe for alerts."
      },
      "NumOfWorkers": {
        "Type": "Number",
        "Default": 4,
        "Description": "Enter the number of lambda function invocations for faster Dead Letter Queue processing."
      }
    },
    "Resources": {
        "SumoCWLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": { "Fn::Join": [ "-", [ "SumoCWLogGroup", { "Fn::Select" : [ "2", {"Fn::Split" : [ "/" , { "Ref": "AWS::StackId" } ]}] } ] ] },
                "RetentionInDays": 7
            }
        },
        "SumoCWLogSubsriptionFilter": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
                "LogGroupName": {
                    "Ref": "SumoCWLogGroup"
                },
                "DestinationArn": {
                    "Fn::GetAtt": [
                        "SumoCWLogsLambda",
                        "Arn"
                    ]
                },
                "FilterPattern": ""
            },
            "DependsOn": [
                "SumoCWLogGroup",
                "SumoCWLambdaPermission",
                "SumoCWLogsLambda"
            ]
        },
        "SumoCWLambdaPermission": {

            "Type": "AWS::Lambda::Permission",

            "Properties": {

                "FunctionName": {
                    "Fn::GetAtt": [
                        "SumoCWLogsLambda",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",

                "Principal": { "Fn::Join": [ ".", [ "logs", { "Ref": "AWS::Region" }, "amazonaws.com" ] ] },

                "SourceAccount": { "Ref": "AWS::AccountId" }
            }
        },
        "SumoCWDeadLetterQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": { "Fn::Join": [ "-", [ "SumoCWDeadLetterQueue", { "Fn::Select" : [ "2", {"Fn::Split" : [ "/" , { "Ref": "AWS::StackId" } ]}] } ] ] }
            }
        },
        "SumoCWLambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {"Service": ["lambda.amazonaws.com"] },
                        "Action": ["sts:AssumeRole"]
                    } ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": { "Fn::Join": [ "-", [ "SQSCreateLogsRolePolicy", { "Fn::Select" : [ "2", {"Fn::Split" : [ "/" , { "Ref": "AWS::StackId" } ]}] } ] ] },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueUrl",
                                    "sqs:ListQueues",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:SendMessageBatch",
                                    "sqs:ReceiveMessage",
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:ListQueueTags",
                                    "sqs:ListDeadLetterSourceQueues",
                                    "sqs:DeleteMessageBatch",
                                    "sqs:PurgeQueue",
                                    "sqs:DeleteQueue",
                                    "sqs:CreateQueue",
                                    "sqs:ChangeMessageVisibilityBatch",
                                    "sqs:SetQueueAttributes"
                                ],
                                "Resource": [
                                    {
                                        "Fn::GetAtt": [
                                            "SumoCWDeadLetterQueue",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }]
                        }
                    },
                    {
                        "PolicyName": { "Fn::Join": [ "-", [ "CloudWatchCreateLogsRolePolicy", { "Fn::Select" : [ "2", {"Fn::Split" : [ "/" , { "Ref": "AWS::StackId" } ]}] } ] ] },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents",
                                    "logs:DescribeLogStreams"
                                ],
                                "Resource": [
                                    { "Fn::Join": [ ":", ["arn", "aws", "logs", { "Ref" : "AWS::Region" }, { "Ref" : "AWS::AccountId" },"log-group","*" ] ] }
                                ]
                            }]
                        }
                    },
                    {
                        "PolicyName": "InvokeLambdaRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "lambda:InvokeFunction"
                                ],
                                "Resource": [
                                       { "Fn::Join": [ ":", ["arn", "aws", "lambda", { "Ref" : "AWS::Region" }, { "Ref" : "AWS::AccountId" }, "function", { "Fn::Join": [ "-", [ "SumoCWProcessDLQLambda", { "Fn::Select" : [ "2", {"Fn::Split" : [ "/" , { "Ref": "AWS::StackId" } ]}] } ] ] } ] ] }
                                ]
                            }]
                        }
                    }
                ]
            }
        },
        "SumoCWLogsLambda": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "SumoCWLambdaExecutionRole",
                "SumoCWDeadLetterQueue"
            ],
            "Properties": {
                "FunctionName": { "Fn::Join": [ "-", [ "SumoCWLogsLambda", { "Fn::Select" : [ "2", {"Fn::Split" : [ "/" , { "Ref": "AWS::StackId" } ]}] } ] ] },
                "Code": {
                    "S3Bucket": {"Fn::Join": ["", ["appdevzipfiles-", { "Ref" : "AWS::Region" }] ] },
                    "S3Key": "dlqprocessor.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "SumoCWLambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 300,
                "DeadLetterConfig": {
                    "TargetArn" : {
                        "Fn::GetAtt": [
                            "SumoCWDeadLetterQueue",
                            "Arn"
                        ]
                    }
                },
                "Handler": "cloudwatchlogs_lambda.handler",
                "Runtime": "nodejs8.10",
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "SUMO_ENDPOINT": {"Ref": "SumoEndPointURL"}
                    }
                }
            }
        },
        "SumoCWEventsInvokeLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": { "Ref": "SumoCWProcessDLQLambda" },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": { "Fn::GetAtt": ["SumoCWProcessDLQScheduleRule", "Arn"] }
            }
        },
        "SumoCWProcessDLQScheduleRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Events rule for Cron",
                "ScheduleExpression": "rate(5 minutes)",
                "State": "ENABLED",
                "Targets": [{
                    "Arn": { "Fn::GetAtt": ["SumoCWProcessDLQLambda", "Arn"] },
                    "Id": "TargetFunctionV1"
                }]
            }
        },
        "SumoCWProcessDLQLambda": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "SumoCWLambdaExecutionRole",
                "SumoCWDeadLetterQueue"
            ],
            "Properties": {
                "FunctionName": { "Fn::Join": [ "-", [ "SumoCWProcessDLQLambda", { "Fn::Select" : [ "2", {"Fn::Split" : [ "/" , { "Ref": "AWS::StackId" } ]}] } ] ] },
                "Code": {
                    "S3Bucket": {"Fn::Join": ["", ["appdevzipfiles-", { "Ref" : "AWS::Region" }] ] },
                    "S3Key": "dlqprocessor.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "SumoCWLambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 300,
                "Handler": "DLQProcessor.handler",
                "DeadLetterConfig": {
                    "TargetArn" : {
                        "Fn::GetAtt": [
                            "SumoCWDeadLetterQueue",
                            "Arn"
                        ]
                    }
                },
                "Runtime": "nodejs8.10",
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "SUMO_ENDPOINT": {"Ref": "SumoEndPointURL"},
                        "TASK_QUEUE_URL": {
                            "Fn::Join": [
                                "",
                                [
                                  "https://sqs.",
                                  { "Ref" : "AWS::Region" },
                                  ".amazonaws.com/",
                                  { "Ref" : "AWS::AccountId" },
                                  "/",
                                  {"Fn::GetAtt": ["SumoCWDeadLetterQueue", "QueueName"]}
                                ]
                            ]
                        },
                        "NUM_OF_WORKERS": {"Ref": "NumOfWorkers"},
                        "SUMO_CLIENT_HEADER": "dlq-aws-lambda"
                    }
                }
            }
        },
        "SumoCWEmailSNSTopic": {
            "Type":"AWS::SNS::Topic",
            "Properties":{
                "Subscription":[ {
                    "Endpoint" : {"Ref": "EmailID"},
                    "Protocol" : "email"
                }]
            }
        },
        "SumoCWSpilloverAlarm":{
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{
                "AlarmActions":[
                    {
                        "Ref":"SumoCWEmailSNSTopic"
                    }
                ],
                "AlarmDescription":"Notify via email if number of messages in DeadLetterQueue exceeds threshold",
                "ComparisonOperator":"GreaterThanThreshold",
                "Dimensions":[
                  {
                    "Name": "QueueName",
                    "Value": "SumoCWDeadLetterQueue"
                  }
                ],
                "EvaluationPeriods":"1",
                "MetricName":"ApproximateNumberOfMessagesVisible",
                "Namespace":"AWS/SQS",
                "Period":"3600",
                "Statistic":"Sum",
                "Threshold":"100000"
            },
            "DependsOn": ["SumoCWEmailSNSTopic"]
        }
    }
}

